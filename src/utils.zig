const std = @import("std");

const ASCII = std.StaticStringMap([]const u8).initComptime(.{
    .{ " ", &.{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
    .{ "!", &.{ 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x00 } },
    .{ "\"", &.{ 0x00, 0x00, 0xC0, 0x00, 0x00, 0xC0, 0x00, 0x00 } },
    .{ "#", &.{ 0x00, 0x24, 0x7E, 0x24, 0x24, 0x7E, 0x24, 0x00 } },
    .{ "$", &.{ 0x24, 0x52, 0x52, 0xFF, 0x4A, 0x4A, 0x24, 0x00 } },
    .{ "%", &.{ 0x40, 0xA4, 0x48, 0x10, 0x24, 0x4A, 0x04, 0x00 } },
    .{ "&", &.{ 0x6C, 0x92, 0x92, 0x92, 0x6A, 0x04, 0x0A, 0x00 } },
    .{ "'", &.{ 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00 } },
    .{ "(", &.{ 0x00, 0x00, 0x00, 0x38, 0x44, 0x82, 0x00, 0x00 } },
    .{ ")", &.{ 0x00, 0x00, 0x82, 0x44, 0x38, 0x00, 0x00, 0x00 } },
    .{ "*", &.{ 0x00, 0x48, 0x30, 0xFC, 0x30, 0x48, 0x00, 0x00 } },
    .{ "+", &.{ 0x00, 0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x00 } },
    .{ ",", &.{ 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00 } },
    .{ "-", &.{ 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00 } },
    .{ ".", &.{ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 } },
    .{ "/", &.{ 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00 } },
    .{ "0", &.{ 0x3A, 0x44, 0x8A, 0x92, 0xA2, 0x44, 0xB8, 0x00 } },
    .{ "1", &.{ 0x00, 0x00, 0x00, 0x40, 0xFE, 0x00, 0x00, 0x00 } },
    .{ "2", &.{ 0x46, 0x8A, 0x8A, 0x92, 0x92, 0x92, 0x62, 0x00 } },
    .{ "3", &.{ 0x84, 0x82, 0x82, 0x92, 0x92, 0xB2, 0xCC, 0x00 } },
    .{ "4", &.{ 0x0C, 0x14, 0x24, 0x44, 0x84, 0x1E, 0x04, 0x00 } },
    .{ "5", &.{ 0xE4, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0x9C, 0x00 } },
    .{ "6", &.{ 0x3C, 0x52, 0x92, 0x92, 0x92, 0x92, 0x0C, 0x00 } },
    .{ "7", &.{ 0x80, 0x82, 0x84, 0x88, 0x90, 0xA0, 0xC0, 0x00 } },
    .{ "8", &.{ 0x6C, 0x92, 0x92, 0x92, 0x92, 0x92, 0x6C, 0x00 } },
    .{ "9", &.{ 0x60, 0x92, 0x92, 0x92, 0x92, 0x94, 0x78, 0x00 } },
    .{ ",", &.{ 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00 } },
    .{ ";", &.{ 0x00, 0x00, 0x02, 0x24, 0x00, 0x00, 0x00, 0x00 } },
    .{ "<", &.{ 0x00, 0x00, 0x10, 0x28, 0x44, 0x82, 0x00, 0x00 } },
    .{ "=", &.{ 0x00, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00 } },
    .{ ">", &.{ 0x00, 0x00, 0x82, 0x44, 0x28, 0x10, 0x00, 0x00 } },
    .{ "?", &.{ 0x40, 0x80, 0x80, 0x8A, 0x90, 0x90, 0x60, 0x00 } },
    .{ "@", &.{ 0x00, 0x4C, 0x92, 0x94, 0xBE, 0x82, 0x7E, 0x00 } },
    .{ "A", &.{ 0x06, 0x18, 0x68, 0x88, 0x68, 0x18, 0x06, 0x00 } },
    .{ "B", &.{ 0xFE, 0x92, 0x92, 0x92, 0x92, 0x92, 0x6C, 0x00 } },
    .{ "C", &.{ 0x38, 0x44, 0x82, 0x82, 0x82, 0x82, 0x44, 0x00 } },
    .{ "D", &.{ 0xFE, 0x82, 0x82, 0x82, 0x82, 0x44, 0x38, 0x00 } },
    .{ "E", &.{ 0xFE, 0x92, 0x92, 0x92, 0x92, 0x92, 0x82, 0x00 } },
    .{ "F", &.{ 0xFE, 0x90, 0x90, 0x90, 0x90, 0x90, 0x80, 0x00 } },
    .{ "G", &.{ 0x38, 0x44, 0x82, 0x82, 0x92, 0x92, 0x5E, 0x00 } },
    .{ "H", &.{ 0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFE, 0x00 } },
    .{ "I", &.{ 0x00, 0x82, 0x82, 0xFE, 0x82, 0x82, 0x00, 0x00 } },
    .{ "J", &.{ 0x0C, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF8, 0x00 } },
    .{ "K", &.{ 0xFE, 0x10, 0x10, 0x10, 0x28, 0x44, 0x82, 0x00 } },
    .{ "L", &.{ 0xFE, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00 } },
    .{ "M", &.{ 0xFE, 0x40, 0x20, 0x10, 0x20, 0x40, 0xFE, 0x00 } },
    .{ "N", &.{ 0xFE, 0x40, 0x20, 0x10, 0x08, 0x04, 0xFE, 0x00 } },
    .{ "O", &.{ 0x38, 0x44, 0x82, 0x82, 0x82, 0x44, 0x38, 0x00 } },
    .{ "P", &.{ 0xFE, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00 } },
    .{ "Q", &.{ 0x38, 0x44, 0x82, 0x82, 0x8A, 0x44, 0x3A, 0x00 } },
    .{ "R", &.{ 0xFE, 0x88, 0x88, 0x88, 0x88, 0x8C, 0x72, 0x00 } },
    .{ "S", &.{ 0x64, 0x92, 0x92, 0x92, 0x92, 0x92, 0x4C, 0x00 } },
    .{ "T", &.{ 0x80, 0x80, 0x80, 0xFE, 0x80, 0x80, 0x80, 0x00 } },
    .{ "U", &.{ 0xFC, 0x02, 0x02, 0x02, 0x02, 0x02, 0xFC, 0x00 } },
    .{ "V", &.{ 0xC0, 0x30, 0x0C, 0x02, 0x0C, 0x30, 0xC0, 0x00 } },
    .{ "W", &.{ 0xFC, 0x02, 0x04, 0x08, 0x04, 0x02, 0xFC, 0x00 } },
    .{ "X", &.{ 0x82, 0x44, 0x28, 0x10, 0x28, 0x44, 0x82, 0x00 } },
    .{ "Y", &.{ 0xC0, 0x20, 0x10, 0x0E, 0x10, 0x20, 0xC0, 0x00 } },
    .{ "Z", &.{ 0x82, 0x86, 0x8A, 0x92, 0xA2, 0xC2, 0x82, 0x00 } },
    .{ "[", &.{ 0x00, 0xFE, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00 } },
    .{ "\\", &.{ 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00 } },
    .{ "]", &.{ 0x00, 0x82, 0x82, 0xFE, 0x00, 0x00, 0x00, 0x00 } },
    .{ "^", &.{ 0x00, 0x20, 0x40, 0x80, 0x40, 0x20, 0x00, 0x00 } },
    .{ "_", &.{ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 } },
    .{ "`", &.{ 0x12, 0x7E, 0x92, 0x92, 0x92, 0x82, 0x42, 0x00 } },
    .{ "a", &.{ 0x04, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x1E, 0x00 } },
    .{ "b", &.{ 0xFE, 0x14, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00 } },
    .{ "c", &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x14, 0x00 } },
    .{ "d", &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x14, 0xFE, 0x00 } },
    .{ "e", &.{ 0x1C, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x12, 0x00 } },
    .{ "f", &.{ 0x10, 0x10, 0x7E, 0x90, 0x90, 0x80, 0x40, 0x00 } },
    .{ "g", &.{ 0x19, 0x25, 0x25, 0x25, 0x25, 0x25, 0x3E, 0x00 } },
    .{ "h", &.{ 0xFE, 0x10, 0x20, 0x20, 0x20, 0x20, 0x1E, 0x00 } },
    .{ "i", &.{ 0x00, 0x00, 0x00, 0xBE, 0x00, 0x00, 0x00, 0x00 } },
    .{ "j", &.{ 0x06, 0x01, 0x01, 0x01, 0x01, 0x01, 0xBE, 0x00 } },
    .{ "k", &.{ 0xFE, 0x08, 0x08, 0x14, 0x14, 0x22, 0x22, 0x00 } },
    .{ "l", &.{ 0x00, 0x80, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x00 } },
    .{ "m", &.{ 0x3E, 0x20, 0x20, 0x1E, 0x20, 0x20, 0x1E, 0x00 } },
    .{ "n", &.{ 0x3E, 0x10, 0x20, 0x20, 0x20, 0x20, 0x1E, 0x00 } },
    .{ "o", &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00 } },
    .{ "p", &.{ 0x3F, 0x14, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00 } },
    .{ "q", &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x14, 0x3F, 0x00 } },
    .{ "r", &.{ 0x3E, 0x10, 0x20, 0x20, 0x20, 0x20, 0x10, 0x00 } },
    .{ "s", &.{ 0x12, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x24, 0x00 } },
    .{ "t", &.{ 0x20, 0x20, 0xFC, 0x22, 0x22, 0x02, 0x02, 0x00 } },
    .{ "u", &.{ 0x3C, 0x02, 0x02, 0x02, 0x02, 0x04, 0x3E, 0x00 } },
    .{ "v", &.{ 0x30, 0x08, 0x04, 0x02, 0x04, 0x08, 0x30, 0x00 } },
    .{ "w", &.{ 0x30, 0x0C, 0x02, 0x0C, 0x02, 0x0C, 0x30, 0x00 } },
    .{ "x", &.{ 0x22, 0x22, 0x14, 0x08, 0x14, 0x22, 0x22, 0x00 } },
    .{ "y", &.{ 0x30, 0x09, 0x05, 0x02, 0x04, 0x08, 0x30, 0x00 } },
    .{ "z", &.{ 0x00, 0x22, 0x26, 0x2A, 0x2A, 0x32, 0x22, 0x00 } },
    .{ "{", &.{ 0x00, 0x10, 0x10, 0x6C, 0x82, 0x82, 0x82, 0x00 } },
    .{ "|", &.{ 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00 } },
    .{ "}", &.{ 0x00, 0x82, 0x82, 0x82, 0x6C, 0x10, 0x10, 0x00 } },
    .{ "~", &.{ 0x00, 0x60, 0x80, 0xC0, 0x60, 0x20, 0xC0, 0x00 } },
});

pub fn ascii(char: u8) []const u8 {
    return switch (char) {
        ' ' => &.{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
        '!' => &.{ 0x00, 0x00, 0x00, 0xFA, 0x00, 0x00, 0x00, 0x00 },
        '"' => &.{ 0x00, 0x00, 0xC0, 0x00, 0x00, 0xC0, 0x00, 0x00 },
        '#' => &.{ 0x00, 0x24, 0x7E, 0x24, 0x24, 0x7E, 0x24, 0x00 },
        '$' => &.{ 0x24, 0x52, 0x52, 0xFF, 0x4A, 0x4A, 0x24, 0x00 },
        '%' => &.{ 0x40, 0xA4, 0x48, 0x10, 0x24, 0x4A, 0x04, 0x00 },
        '&' => &.{ 0x6C, 0x92, 0x92, 0x92, 0x6A, 0x04, 0x0A, 0x00 },
        '\'' => &.{ 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00 },
        '(' => &.{ 0x00, 0x00, 0x00, 0x38, 0x44, 0x82, 0x00, 0x00 },
        ')' => &.{ 0x00, 0x00, 0x82, 0x44, 0x38, 0x00, 0x00, 0x00 },
        '*' => &.{ 0x00, 0x48, 0x30, 0xFC, 0x30, 0x48, 0x00, 0x00 },
        '+' => &.{ 0x00, 0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x00 },
        ',' => &.{ 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00 },
        '-' => &.{ 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x00 },
        '.' => &.{ 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 },
        '/' => &.{ 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00 },
        '0' => &.{ 0x3A, 0x44, 0x8A, 0x92, 0xA2, 0x44, 0xB8, 0x00 },
        '1' => &.{ 0x00, 0x00, 0x00, 0x40, 0xFE, 0x00, 0x00, 0x00 },
        '2' => &.{ 0x46, 0x8A, 0x8A, 0x92, 0x92, 0x92, 0x62, 0x00 },
        '3' => &.{ 0x84, 0x82, 0x82, 0x92, 0x92, 0xB2, 0xCC, 0x00 },
        '4' => &.{ 0x0C, 0x14, 0x24, 0x44, 0x84, 0x1E, 0x04, 0x00 },
        '5' => &.{ 0xE4, 0xA2, 0xA2, 0xA2, 0xA2, 0xA2, 0x9C, 0x00 },
        '6' => &.{ 0x3C, 0x52, 0x92, 0x92, 0x92, 0x92, 0x0C, 0x00 },
        '7' => &.{ 0x80, 0x82, 0x84, 0x88, 0x90, 0xA0, 0xC0, 0x00 },
        '8' => &.{ 0x6C, 0x92, 0x92, 0x92, 0x92, 0x92, 0x6C, 0x00 },
        '9' => &.{ 0x60, 0x92, 0x92, 0x92, 0x92, 0x94, 0x78, 0x00 },
        ',' => &.{ 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00 },
        ';' => &.{ 0x00, 0x00, 0x02, 0x24, 0x00, 0x00, 0x00, 0x00 },
        '<' => &.{ 0x00, 0x00, 0x10, 0x28, 0x44, 0x82, 0x00, 0x00 },
        '=' => &.{ 0x00, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00 },
        '>' => &.{ 0x00, 0x00, 0x82, 0x44, 0x28, 0x10, 0x00, 0x00 },
        '?' => &.{ 0x40, 0x80, 0x80, 0x8A, 0x90, 0x90, 0x60, 0x00 },
        '@' => &.{ 0x00, 0x4C, 0x92, 0x94, 0xBE, 0x82, 0x7E, 0x00 },
        'A' => &.{ 0x06, 0x18, 0x68, 0x88, 0x68, 0x18, 0x06, 0x00 },
        'B' => &.{ 0xFE, 0x92, 0x92, 0x92, 0x92, 0x92, 0x6C, 0x00 },
        'C' => &.{ 0x38, 0x44, 0x82, 0x82, 0x82, 0x82, 0x44, 0x00 },
        'D' => &.{ 0xFE, 0x82, 0x82, 0x82, 0x82, 0x44, 0x38, 0x00 },
        'E' => &.{ 0xFE, 0x92, 0x92, 0x92, 0x92, 0x92, 0x82, 0x00 },
        'F' => &.{ 0xFE, 0x90, 0x90, 0x90, 0x90, 0x90, 0x80, 0x00 },
        'G' => &.{ 0x38, 0x44, 0x82, 0x82, 0x92, 0x92, 0x5E, 0x00 },
        'H' => &.{ 0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFE, 0x00 },
        'I' => &.{ 0x00, 0x82, 0x82, 0xFE, 0x82, 0x82, 0x00, 0x00 },
        'J' => &.{ 0x0C, 0x02, 0x02, 0x02, 0x02, 0x04, 0xF8, 0x00 },
        'K' => &.{ 0xFE, 0x10, 0x10, 0x10, 0x28, 0x44, 0x82, 0x00 },
        'L' => &.{ 0xFE, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00 },
        'M' => &.{ 0xFE, 0x40, 0x20, 0x10, 0x20, 0x40, 0xFE, 0x00 },
        'N' => &.{ 0xFE, 0x40, 0x20, 0x10, 0x08, 0x04, 0xFE, 0x00 },
        'O' => &.{ 0x38, 0x44, 0x82, 0x82, 0x82, 0x44, 0x38, 0x00 },
        'P' => &.{ 0xFE, 0x88, 0x88, 0x88, 0x88, 0x88, 0x70, 0x00 },
        'Q' => &.{ 0x38, 0x44, 0x82, 0x82, 0x8A, 0x44, 0x3A, 0x00 },
        'R' => &.{ 0xFE, 0x88, 0x88, 0x88, 0x88, 0x8C, 0x72, 0x00 },
        'S' => &.{ 0x64, 0x92, 0x92, 0x92, 0x92, 0x92, 0x4C, 0x00 },
        'T' => &.{ 0x80, 0x80, 0x80, 0xFE, 0x80, 0x80, 0x80, 0x00 },
        'U' => &.{ 0xFC, 0x02, 0x02, 0x02, 0x02, 0x02, 0xFC, 0x00 },
        'V' => &.{ 0xC0, 0x30, 0x0C, 0x02, 0x0C, 0x30, 0xC0, 0x00 },
        'W' => &.{ 0xFC, 0x02, 0x04, 0x08, 0x04, 0x02, 0xFC, 0x00 },
        'X' => &.{ 0x82, 0x44, 0x28, 0x10, 0x28, 0x44, 0x82, 0x00 },
        'Y' => &.{ 0xC0, 0x20, 0x10, 0x0E, 0x10, 0x20, 0xC0, 0x00 },
        'Z' => &.{ 0x82, 0x86, 0x8A, 0x92, 0xA2, 0xC2, 0x82, 0x00 },
        '[' => &.{ 0x00, 0xFE, 0x82, 0x82, 0x00, 0x00, 0x00, 0x00 },
        '\\' => &.{ 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00 },
        ']' => &.{ 0x00, 0x82, 0x82, 0xFE, 0x00, 0x00, 0x00, 0x00 },
        '^' => &.{ 0x00, 0x20, 0x40, 0x80, 0x40, 0x20, 0x00, 0x00 },
        '_' => &.{ 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 },
        '`' => &.{ 0x12, 0x7E, 0x92, 0x92, 0x92, 0x82, 0x42, 0x00 },
        'a' => &.{ 0x04, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x1E, 0x00 },
        'b' => &.{ 0xFE, 0x14, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00 },
        'c' => &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x14, 0x00 },
        'd' => &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x14, 0xFE, 0x00 },
        'e' => &.{ 0x1C, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x12, 0x00 },
        'f' => &.{ 0x10, 0x10, 0x7E, 0x90, 0x90, 0x80, 0x40, 0x00 },
        'g' => &.{ 0x19, 0x25, 0x25, 0x25, 0x25, 0x25, 0x3E, 0x00 },
        'h' => &.{ 0xFE, 0x10, 0x20, 0x20, 0x20, 0x20, 0x1E, 0x00 },
        'i' => &.{ 0x00, 0x00, 0x00, 0xBE, 0x00, 0x00, 0x00, 0x00 },
        'j' => &.{ 0x06, 0x01, 0x01, 0x01, 0x01, 0x01, 0xBE, 0x00 },
        'k' => &.{ 0xFE, 0x08, 0x08, 0x14, 0x14, 0x22, 0x22, 0x00 },
        'l' => &.{ 0x00, 0x80, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x00 },
        'm' => &.{ 0x3E, 0x20, 0x20, 0x1E, 0x20, 0x20, 0x1E, 0x00 },
        'n' => &.{ 0x3E, 0x10, 0x20, 0x20, 0x20, 0x20, 0x1E, 0x00 },
        'o' => &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00 },
        'p' => &.{ 0x3F, 0x14, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00 },
        'q' => &.{ 0x1C, 0x22, 0x22, 0x22, 0x22, 0x14, 0x3F, 0x00 },
        'r' => &.{ 0x3E, 0x10, 0x20, 0x20, 0x20, 0x20, 0x10, 0x00 },
        's' => &.{ 0x12, 0x2A, 0x2A, 0x2A, 0x2A, 0x2A, 0x24, 0x00 },
        't' => &.{ 0x20, 0x20, 0xFC, 0x22, 0x22, 0x02, 0x02, 0x00 },
        'u' => &.{ 0x3C, 0x02, 0x02, 0x02, 0x02, 0x04, 0x3E, 0x00 },
        'v' => &.{ 0x30, 0x08, 0x04, 0x02, 0x04, 0x08, 0x30, 0x00 },
        'w' => &.{ 0x30, 0x0C, 0x02, 0x0C, 0x02, 0x0C, 0x30, 0x00 },
        'x' => &.{ 0x22, 0x22, 0x14, 0x08, 0x14, 0x22, 0x22, 0x00 },
        'y' => &.{ 0x30, 0x09, 0x05, 0x02, 0x04, 0x08, 0x30, 0x00 },
        'z' => &.{ 0x00, 0x22, 0x26, 0x2A, 0x2A, 0x32, 0x22, 0x00 },
        '{' => &.{ 0x00, 0x10, 0x10, 0x6C, 0x82, 0x82, 0x82, 0x00 },
        '|' => &.{ 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00 },
        '}' => &.{ 0x00, 0x82, 0x82, 0x82, 0x6C, 0x10, 0x10, 0x00 },
        '~' => &.{ 0x00, 0x60, 0x80, 0xC0, 0x60, 0x20, 0xC0, 0x00 },
        else => @panic("invalid char"),
    };
}

fn message_monospace(
    buffer: *[]u8,
    text: []const u8,
    alignment: enum { Left, Right, Center },
    first_line: usize,
    width: usize,
    height: usize,
) void {
    const row_offset = height / 8;

    var line_idx: usize = 0;
    var lines_iter = std.mem.splitScalar(u8, text, '\n');
    while (lines_iter.next()) |line| {
        defer line_idx += 1;
        const add = width / 8 - line.len;
        var addl: usize = 0;
        var addr: usize = 0;

        switch (alignment) {
            .Left => addr = add,
            .Right => addl = add,
            .Center => {
                addr = add / 2;
                addl = add - addr;
            },
        }

        const lstr: usize = line_idx + first_line;
        for (addl) |_| {
            for (0..8) |_| {
                buffer[lstr] = ~0x00;
                lstr += row_offset;
            }
        }

        for (0..line.len) |j| {
            for (ascii(line[j])) |k| {
                buffer[lstr] = ~k;
                lstr += row_offset;
            }
        }

        for (addr) |_| {
            for (0..8) |_| {
                buffer[lstr] = ~0x00;
                lstr += row_offset;
            }
        }
    }
}
